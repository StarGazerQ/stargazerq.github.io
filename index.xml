<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>StarGazerQ&#39;s Blog</title>
    <link>https://stargazerq.github.io/</link>
    <description>Recent content on StarGazerQ&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 30 Aug 2019 22:46:57 +0800</lastBuildDate>
    
	<atom:link href="https://stargazerq.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Blog7</title>
      <link>https://stargazerq.github.io/post/blog7/</link>
      <pubDate>Fri, 30 Aug 2019 22:46:57 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog7/</guid>
      <description></description>
    </item>
    
    <item>
      <title>用xtu避免笔记本出现降频</title>
      <link>https://stargazerq.github.io/post/blog6/</link>
      <pubDate>Thu, 29 Aug 2019 22:12:52 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog6/</guid>
      <description>用xtu避免笔记本出现降频 游戏本在夏天真的顶不住，尤其是八代九代cpu，33度的室温分分钟达到100度。
因为撞到了温度墙，不少厂商没调教好的游戏本很容易出现功耗限制导致降频来强行降温。
这导致了游戏时会出现时不时的卡顿，体验极其糟糕。。。
所以今天以本人i7 8750hq + 2060 配置的笔记本来做个示范，用xtu手动限制cpu功耗来避免撞到温度墙而出现的极端降频。
一：安装XTU 去英特尔官网下载Extreme Tuning Utility
xtu
xtu是牙膏厂官方出的调教英特尔cpu的软件，本来是用来玩超频的，但也可以用来限制功率减低cpu发热
二：限制cpu功耗 如图，将pl1与pl2分别拉至60w和40w（具体调整多少取决你机器的散热能力，可自行选择），限制cpu的发热量，再略微减一减cpu的电压（-0.12v比较合适，再低可能会蓝屏），能提升一点性能，算是个降压超频（cpu频率由电流控制，降低电压能让cpu在相同功率下得到更高睿频）
三：烤机实测 此图是在没有进行xtu调试时烤机的状态，可以看到cpu迅速冲到100度，然后降频到2.42GHz（有些电脑会降的更多，就会影响游戏体验）
此图是在开启xtu降频之后的效果，可以看到cpu温度一直保持在90度左右，没有碰撞温度墙，cpu频率可以保持在3Ghz
从温度走势可以看到，虽热温度比降频时略高一些，但是能在不碰撞温度墙的同时保持一个较高的性能
注意事项 根据bios的不同，xtu有时在重启电脑后会失效，建议右下角save游戏时调用即可
有些控制中心软件如AWCC等，可能内置xtu插件，会与xtu冲突，请注意</description>
    </item>
    
    <item>
      <title>在md文件中插入图片和超链接</title>
      <link>https://stargazerq.github.io/post/blog5/</link>
      <pubDate>Tue, 27 Aug 2019 21:09:06 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog5/</guid>
      <description>在md文件中插入图片和超链接 为了让文章生动简明，肯定会用到图片和外站地址
图片 ![图片名字](图片地址 &amp;quot;图片说明&amp;quot;)
![放个图片试试](http://ww1.sinaimg.cn/large/00780jzcly1g69uzoucczj30fg0axgn2.jpg &amp;quot;放张图试试&amp;quot;)
[]中填入图片名字， &amp;ldquo;&amp;ldquo;中是说明部分，也就是鼠标放在图片上时显示的字，可加可不加
如果是网络图片,直接吧地址填入()即可
要使用本地图片的话，就要涉及到图床
这里介绍一个好用的图床——新浪微博
谷歌chrome浏览器上也有很多免费图床的扩展工具，很方便，可以自己去看看
超链接 和图片很像，去掉前面的!就行
[超链接名字](地址 &amp;quot;说明&amp;quot;)
[新浪](https://www.sina.com.cn/ &amp;quot;新浪&amp;quot;)
新浪
说明也是可加可不加</description>
    </item>
    
    <item>
      <title>如何更新博客</title>
      <link>https://stargazerq.github.io/post/blog4/</link>
      <pubDate>Mon, 26 Aug 2019 20:20:14 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog4/</guid>
      <description>如何更新博客 建立完了博客，接下来就该更新博客了 命令行输入 hugo new post/blog2.md
即可自动创建新博客
markdown文件可用VS code或其他软件打开进行书写
markdown的书写规则 这里简单的介绍几种md语法，更多的知识还是要大家在实践中得到
标题 在#后跟个空格再写文字即为标题，根据#的个数来决定标题的级数
一级标题 &amp;ldquo;# 一级标题&amp;rdquo; 二级标题 &amp;ldquo;## 二级标题&amp;rdquo; 三级标题 &amp;ldquo;### 三级标题&amp;rdquo; 四级标题 &amp;ldquo;#### 四级标题&amp;rdquo; 五级标题 &amp;ldquo;##### 五级标题&amp;rdquo; 以此类推
引用 在引用的文字前加&amp;gt;即可
&amp;gt;就像这样
分割线 三个或三个以上***即可组成分割线
代码 如果要输入代码，又不想让其生效，用`将其包裹即可 就像这样`
语法还有很多，今天就到这吧，有空再说点其他的</description>
    </item>
    
    <item>
      <title>用hugo&#43;GitHub建立静态博客</title>
      <link>https://stargazerq.github.io/post/blog3/</link>
      <pubDate>Sun, 25 Aug 2019 22:43:08 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog3/</guid>
      <description>用hugo+GitHub建立静态博客 接着之前的继续，在win10设置好hugo环境变量之后，便可以在cmd或者powershell里使用了
一.用hugo搭建本地博客 命令行输入
hugo new site bolg
即可建立生成博客文件夹
如图
接着会提示让我们去下载主题，就按着它的步骤做就行
进入https://themes.gohugo.io/ 下载自己喜欢的主题
如图
网站中里也有下载方法的说明
进入博客的path后，命令行输入教程中的命令后即可完成下载
如图
下载完主题后，输入
hugo server -t m10c &amp;ndash;buildDrafts
即可搭建本地本地博客，其中m10c为所使用的主题的名字
如图
可以打开浏览器进入127.0.0.1检查是否成功
二.将本地博客上传至GitHub 本地博客搭建完后，可以将其上传至GitHub资料库，免费易用很方便
输入
hugo &amp;ndash;theme=m10c &amp;ndash;baseUrl=&amp;ldquo;https://stargazerq.github.io/&amp;quot; &amp;ndash;buildDrafts
将其与你的GitHub资料库关联，这会在路径中生成一个public文件夹
然后进入public文件夹，使用GitHub将其上传至自己的文件库即可
代码为
cd public
git init
git add .
git commit -m &amp;ldquo;hugo博客测试&amp;rdquo;
git remote add origin https://github.com/StarGazerQ/ &amp;ldquo;自己资料库的地址&amp;rdquo; stargazerq.github.io.git
git push -u origin master
如图 上传完成后即可通过访问资料库地址https://stargazerq.github.io/来访问私人博客
自此，个人博客建立完成</description>
    </item>
    
    <item>
      <title>安装hugo的方法</title>
      <link>https://stargazerq.github.io/post/blog2/</link>
      <pubDate>Sat, 24 Aug 2019 19:40:50 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog2/</guid>
      <description>1.下载hugo 本人使用的是win10系统，所以去网页搜hugo直接下载即可
GitHub上就有，挑选对应自己系统的版本就行
2.修改系统变量 将之前下的压缩包解压，然后把其路径添加进win10系统变量，就可以调用了
操作依次为：
1.右键我的电脑
2.高级系统设置
3.环境变量设置
4.添加新的系统变量，输入之前hugo的路径就完事了
如图：
3.完成 然后就可以在cmd或者power shell中调用了，如果成功即安装完成 MAC OS 如果是苹果用户的话，就更简单啦
直接用brew这个工具就直接能装
命令行输入 brew install hugo
直接一键完成
唉，苹果系统还是方便呀</description>
    </item>
    
    <item>
      <title>WELCOME</title>
      <link>https://stargazerq.github.io/post/blog/</link>
      <pubDate>Fri, 23 Aug 2019 11:25:40 +0800</pubDate>
      
      <guid>https://stargazerq.github.io/post/blog/</guid>
      <description>欢迎大家访问我的个人博客 第一次尝试用hugo搭配GitHub搭建静态博客。 总体来说，还是比较方便的一种方法，操作简单，步骤少。 推荐大家尝试。
分割线 关于为什么创建博客，起因是看到了一个介绍hugo的视频。 就来尝试一下，就随便建了这个博客。 既然建了，那后续我也会在这写一些东西。 比如记录一些个人觉得有趣的技巧，或是学习总结之类的。 毕竟只是个静态博客，主要是作为本人学习路程的整理吧。</description>
    </item>
    
  </channel>
</rss>